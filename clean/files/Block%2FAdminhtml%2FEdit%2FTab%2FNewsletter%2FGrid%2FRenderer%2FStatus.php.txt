<?php
/**
 * Constructor and renderer for admin newsletter queue grid block status item.
 * {license_notice}
 *
 * @copyright   {copyright}
 * @license     {license_link}
 */
namespace Magento\Customer\Block\Adminhtml\Edit\Tab\Newsletter\Grid\Renderer;
/**
 * Constructs and renders an admin newsletter queue grid block status item.
 *
 * @package Magento\Customer\Block\Adminhtml\Edit\Tab\Newsletter\Grid\Renderer
 */
class Status extends \Magento\Backend\Block\Widget\Grid\Column\Renderer\AbstractRenderer
{
    /**
     * @var array Array of statuses.
     */
    protected static $_statuses;

    /**
     * Constructs a grid renderer status object.
     * Status values include:
     * * Sent
     * * Cancel
     * * Not Sent
     * * Sending
     * * Paused
     *
     * @return void
     */
    protected function _construct()
    {
        self::$_statuses = array(
            \Magento\Newsletter\Model\Queue::STATUS_SENT => __('Sent'),
            \Magento\Newsletter\Model\Queue::STATUS_CANCEL => __('Cancel'),
            \Magento\Newsletter\Model\Queue::STATUS_NEVER => __('Not Sent'),
            \Magento\Newsletter\Model\Queue::STATUS_SENDING => __('Sending'),
            \Magento\Newsletter\Model\Queue::STATUS_PAUSE => __('Paused')
        );
        parent::_construct();
    }

    /**
     * Renders a grid status item.
     *
     * @param \Magento\Framework\Object $row The row for which to render a status item.
     * @return string Rendered grid status item.
     */
    public function render(\Magento\Framework\Object $row)
    {
        return __($this->getStatus($row->getQueueStatus()));
    }

    /**
     * Determines whether a specified status is set.
     * @todo Not sure what this does.
     * @param string $status A status item.
     * @return string * If status is set, returns the status.
     * * Otherwise, returns *Unknown*.
     */
    public static function getStatus($status)
    {
        if (isset(self::$_statuses[$status])) {
            return self::$_statuses[$status];
        }

        return __('Unknown');
    }
}

