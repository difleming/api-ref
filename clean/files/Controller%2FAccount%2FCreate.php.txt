<?php
/**
 * Constructs, loads, and renders the customer registration form page.
 * {license_notice}
 *
 * @copyright   {copyright}
 * @license     {license_link}
 */
namespace Magento\Customer\Controller\Account;

use Magento\Customer\Service\V1\CustomerAccountServiceInterface;
use Magento\Framework\App\Action\Action;

/**
 * Constructs, loads, and renders the customer registration form page.
 * @package Magento\Customer\Controller\Account Account package.
 */
class Create extends \Magento\Customer\Controller\Account
{
    /** @var \Magento\Customer\Helper\Data Customer helper. */
    protected $customerHelper;

    /**
     * Constructs the customer registration form page.
     *
     * @param \Magento\Framework\App\Action\Context $context Context.
     * @param \Magento\Customer\Model\Session $customerSession Customer session.
     * @param \Magento\Customer\Helper\Address $addressHelper Address helper.
     * @param \Magento\Framework\UrlFactory $urlFactory URL factory.
     * @param \Magento\Store\Model\StoreManagerInterface $storeManager Store manager.
     * @param \Magento\Framework\App\Config\ScopeConfigInterface $scopeConfig Scope configuration.
     * @param \Magento\Framework\App\State $appState Application state.
     * @param CustomerAccountServiceInterface $customerAccountService Customer account service.
     * @param \Magento\Customer\Helper\Data $customerHelper Customer helper.
     */
    public function __construct(
        \Magento\Framework\App\Action\Context $context,
        \Magento\Customer\Model\Session $customerSession,
        \Magento\Customer\Helper\Address $addressHelper,
        \Magento\Framework\UrlFactory $urlFactory,
        \Magento\Store\Model\StoreManagerInterface $storeManager,
        \Magento\Framework\App\Config\ScopeConfigInterface $scopeConfig,
        \Magento\Framework\App\State $appState,
        CustomerAccountServiceInterface $customerAccountService,
        \Magento\Customer\Helper\Data $customerHelper
    ) {
        $this->customerHelper = $customerHelper;
        parent::__construct(
            $context,
            $customerSession,
            $addressHelper,
            $urlFactory,
            $storeManager,
            $scopeConfig,
            $appState,
            $customerAccountService
        );
    }

    /**
     * Loads and renders the customer registration form page.
     *
     * @return void
     */
    public function execute()
    {
        if ($this->_getSession()->isLoggedIn() || !$this->customerHelper->isRegistrationAllowed()) {
            $this->_redirect('*/*');
            return;
        }

        $this->_view->loadLayout();
        $this->_view->getLayout()->initMessages();
        $this->_view->renderLayout();
    }
}

