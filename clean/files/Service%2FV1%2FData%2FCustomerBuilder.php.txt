<?php
/**
 * Customer service data object builder.
 *
 * {license_notice}
 *
 * @copyright {copyright}
 * @license {license}
 */
namespace Magento\Customer\Service\V1\Data;

use Magento\Customer\Service\V1\CustomerMetadataServiceInterface;
use Magento\Framework\Service\Data\Eav\AbstractObject;
use Magento\Framework\Service\Data\Eav\AbstractObjectBuilder;
use Magento\Framework\Service\Data\Eav\AttributeValueBuilder;

/**
 * Builds a customer service data object.
 *
 * A customer service data object has these properties:
 * <ul>
 * <li>Default billing and shipping addresses
 * <li>Confirmation status
 * <li>Created-at time and created-in area
 * <li>Date of birth
 * <li>Email address
 * <li>Prefix, first, middle, and last names, and suffix
 * <li>Gender
 * <li>ID of associated group
 * <li>Unique ID that identifies the customer
 * <li>ID of associated store
 * <li>Value-added tax (VAT)
 * <li>ID of associated website
 * </ul>
 *
 * @method Customer create()
 * @method Customer mergeDataObjectWithArray(AbstractObject $dataObject, array $data)
 * @method Customer mergeDataObjects(AbstractObject $firstDataObject, AbstractObject $secondDataObject)
 */
class CustomerBuilder extends AbstractObjectBuilder
{
    /**
     * @var CustomerMetadataServiceInterface CustomerMetadataServiceInterface object.
     */
    protected $_metadataService;

    /**
     * Constructs a customer service data object.
     * 
     * @param \Magento\Framework\Service\Data\ObjectFactory $objectFactory ObjectFactory object.
     * @param AttributeValueBuilder $valueBuilder AttributeValueBuilder object.
     * @param CustomerMetadataServiceInterface $metadataService CustomerMetadataServiceInterface object.
     */
    public function __construct(
        \Magento\Framework\Service\Data\ObjectFactory $objectFactory,
        AttributeValueBuilder $valueBuilder,
        CustomerMetadataServiceInterface $metadataService
    ) {
        parent::__construct($objectFactory, $valueBuilder);
        $this->_metadataService = $metadataService;
    }

    /**
     * Gets the attribute codes for custom attributes.
     *
     * @return string[] An array of attribute codes.
     */
    public function getCustomAttributesCodes()
    {
        $attributeCodes = array();
        foreach ($this->_metadataService->getCustomCustomerAttributeMetadata() as $attribute) {
            $attributeCodes[] = $attribute->getAttributeCode();
        }
        return $attributeCodes;
    }

    /**
     * Sets the default billing address.
     *
     * @param string $defaultBilling Default billing address.
     * @return $this Updated customer object.
     */
    public function setDefaultBilling($defaultBilling)
    {
        return $this->_set(Customer::DEFAULT_BILLING, $defaultBilling);
    }

    /**
     * Sets the default shipping address.
     *
     * @param string $defaultShipping Default shipping address.
     * @return $this Updated customer object.
     */
    public function setDefaultShipping($defaultShipping)
    {
        return $this->_set(Customer::DEFAULT_SHIPPING, $defaultShipping);
    }

    /**
     * Sets the confirmation value.
     *
     * @param string $confirmation Confirmation value.
     * @return $this Updated customer object.
     */
    public function setConfirmation($confirmation)
    {
        return $this->_set(Customer::CONFIRMATION, $confirmation);
    }

    /**
     * Sets the created-at time.
     *
     * @param string $createdAt Created-at time.
     * @return $this Updated customer object.
     */
    public function setCreatedAt($createdAt)
    {
        return $this->_set(Customer::CREATED_AT, $createdAt);
    }

    /**
     * Sets the created-in area.
     *
     * @param string $createdIn Created-in area.
     * @return $this Updated customer object.
     */
    public function setCreatedIn($createdIn)
    {
        return $this->_set(Customer::CREATED_IN, $createdIn);
    }

    /**
     * Sets the date of birth.
     *
     * @param string $dob Date of birth.
     * @return $this Updated customer object.
     */
    public function setDob($dob)
    {
        return $this->_set(Customer::DOB, $dob);
    }

    /**
     * Sets the email address.
     *
     * @param string $email Email address.
     * @return $this Updated customer object.
     */
    public function setEmail($email)
    {
        return $this->_set(Customer::EMAIL, $email);
    }

    /**
     * Sets the first name.
     *
     * @param string $firstname First name.
     * @return $this Updated customer object.
     */
    public function setFirstname($firstname)
    {
        return $this->_set(Customer::FIRSTNAME, $firstname);
    }

    /**
     * Sets the gender.
     *
     * @param string $gender Gender.
     * @return $this Updated customer object.
     */
    public function setGender($gender)
    {
        return $this->_set(Customer::GENDER, $gender);
    }

    /**
     * Sets the group ID.
     *
     * @param string $groupId Group ID.
     * @return $this Updated customer object.
     */
    public function setGroupId($groupId)
    {
        return $this->_set(Customer::GROUP_ID, $groupId);
    }

    /**
     * Sets the customer ID.
     *
     * @param int $id Customer ID.
     * @return $this Updated customer object.
     */
    public function setId($id)
    {
        return $this->_set(Customer::ID, $id);
    }

    /**
     * Sets the last name.
     *
     * @param string $lastname Last name.
     * @return $this Updated customer object.
     */
    public function setLastname($lastname)
    {
        return $this->_set(Customer::LASTNAME, $lastname);
    }

    /**
     * Sets the middle name.
     *
     * @param string $middlename Middle name.
     * @return $this Updated customer object.
     */
    public function setMiddlename($middlename)
    {
        return $this->_set(Customer::MIDDLENAME, $middlename);
    }

    /**
     * Sets the prefix.
     *
     * @param string $prefix Prefix.
     * @return $this Updated customer object.
     */
    public function setPrefix($prefix)
    {
        return $this->_set(Customer::PREFIX, $prefix);
    }

    /**
     * Sets the store ID.
     *
     * @param int $storeId Store ID.
     * @return $this Updated customer object.
     */
    public function setStoreId($storeId)
    {
        return $this->_set(Customer::STORE_ID, $storeId);
    }

    /**
     * Sets the suffix.
     *
     * @param string $suffix Suffix.
     * @return $this Updated customer object.
     */
    public function setSuffix($suffix)
    {
        return $this->_set(Customer::SUFFIX, $suffix);
    }

    /**
     * Sets the value-added tax (VAT).
     *
     * @param string $taxvat Value-added tax (VAT).
     * @return $this Updated customer object.
     */
    public function setTaxvat($taxvat)
    {
        return $this->_set(Customer::TAXVAT, $taxvat);
    }

    /**
     * Sets the website ID.
     *
     * @param int $websiteId Website ID.
     * @return $this Updated customer object.
     */
    public function setWebsiteId($websiteId)
    {
        return $this->_set(Customer::WEBSITE_ID, $websiteId);
    }
}

