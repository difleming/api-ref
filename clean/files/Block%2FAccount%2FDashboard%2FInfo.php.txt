<?php
/**
 * Constructs and gets information about a customer dashboard.
 * {license_notice}
 *
 * @copyright   {copyright}
 * @license     {license_link}
 */
namespace Magento\Customer\Block\Account\Dashboard;

use Magento\Customer\Service\V1\CustomerAccountServiceInterface;
use Magento\Framework\Exception\NoSuchEntityException;

/**
 * Constructs and gets information about a customer dashboard information object.
 */
class Info extends \Magento\Framework\View\Element\Template
{
    /**
     * @var \Magento\Newsletter\Model\Subscriber Cached subscription object.
     */
    protected $_subscription;

    /**
     * @var \Magento\Newsletter\Model\SubscriberFactory Cached subscription factory.
     */
    protected $_subscriberFactory;

    /**
     * @var \Magento\Customer\Helper\View Cached helper view. */
    protected $_helperView;

    /**
     * @var \Magento\Customer\Helper\Session\CurrentCustomer The current customer.
     */
    protected $currentCustomer;

    /**
     * Constructs a customer dashboard information object.
     *
     * @param \Magento\Framework\View\Element\Template\Context $context Context.
     * @param \Magento\Customer\Helper\Session\CurrentCustomer $currentCustomer The current customer.
     * @param \Magento\Newsletter\Model\SubscriberFactory $subscriberFactory A subscriber factory object.
     * @param \Magento\Customer\Helper\View $helperView A helper view object.
     * @param array $data An array of data.
     */
    public function __construct(
        \Magento\Framework\View\Element\Template\Context $context,
        \Magento\Customer\Helper\Session\CurrentCustomer $currentCustomer,
        \Magento\Newsletter\Model\SubscriberFactory $subscriberFactory,
        \Magento\Customer\Helper\View $helperView,
        array $data = array()
    ) {
        $this->currentCustomer = $currentCustomer;
        $this->_subscriberFactory = $subscriberFactory;
        $this->_helperView = $helperView;
        parent::__construct($context, $data);
        $this->_isScopePrivate = true;
    }

    /**
     * Gets the Magento customer model for this block.
     *
     * @return \Magento\Customer\Service\V1\Data\Customer|null * The customer model for this block.
     * * Otherwise, null.
     */
    public function getCustomer()
    {
        try {
            return $this->currentCustomer->getCustomer();
        } catch (NoSuchEntityException $e) {
            return null;
        }
    }

    /**
     * Gets the full name of a customer.
     *
     * @return string Full name of the customer.
     */
    public function getName()
    {
        return $this->_helperView->getCustomerName($this->getCustomer());
    }

    /**
     * Gets a URL that enables the customer to change their password.
     *
     * @return string Change password URL.
     */
    public function getChangePasswordUrl()
    {
        return $this->_urlBuilder->getUrl('*/account/edit/changepass/1');
    }

    /**
     * Gets information about a customer subscription object.
     *
     * @return \Magento\Newsletter\Model\Subscriber Customer subscription object.
     */
    public function getSubscriptionObject()
    {
        if (!$this->_subscription) {
            $this->_subscription = $this->_createSubscriber();
            $customer = $this->getCustomer();
            if ($customer) {
                $this->_subscription->loadByEmail($customer->getEmail());
            }
        }
        return $this->_subscription;
    }

    /**
     * Gets the customer subscription status.
     *
     * @return bool * **true** - Is subscribed.
     * * **false** - Is not subscribed.
     *
     * @SuppressWarnings(PHPMD.BooleanGetMethodName)
     */
    public function getIsSubscribed()
    {
        return $this->getSubscriptionObject()->isSubscribed();
    }

    /**
     * Determines whether the newsletter module is available.
     *
     * @return bool * **true** - Is available.
     * * **false** - Is not available.
     */
    public function isNewsletterEnabled()
    {
        return $this->getLayout()->getBlockSingleton('Magento\Customer\Block\Form\Register')->isNewsletterEnabled();
    }

    /**
     * Creates a subscriber.
     *
     * @return \Magento\Newsletter\Model\Subscriber Customer subscriber object.
     */
    protected function _createSubscriber()
    {
        return $this->_subscriberFactory->create();
    }
}

